Description: >
  Kay Locke / Udagram

Parameters:

  EnvironmentName:
    Description: An environment that will be prefixed to resource names
    Type: String
    Default: LockeUdagram

  SourceIP:
    Description: IP address to allow SSH access 
    Type: String
    Default: 102.89.0.0/20

  S3BucketKeyName:
    Description: S3 bucket where SSH key is hosted
    Type: String
    Default: locke-udagram-key

  KeyBastionSSH:
    Description: KeyName to access bastion host
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: udagram

Mappings:
  WebAppRegion:
    us-west-2:
      HVM64: ami-0d1cd67c26f5fca19

Resources:
  BastionIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: '/'

  BastionIamPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: fullAccess
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: 's3:*'
            Resource: '*'
      Roles:
        - !Ref BastionIamRole

  BastionIamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: '/'
      Roles:
        - !Ref BastionIamRole

  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG to access to bastion host
      VpcId:
        Fn::ImportValue: !Sub '${EnvironmentName}-VPCID'
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Sub ${SourceIP}

  Bastion1:
    Type: AWS::EC2::Instance
    DependsOn:
      - BastionSecurityGroup
      - BastionIamInstanceProfile
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install unzip awscli -y
          cd /home/ubuntu
          aws s3 cp s3://${S3BucketKeyName}/${KeyBastionSSH}.pem /home/ubuntu
          chmod 400 ${KeyBastionSSH}.pem
      IamInstanceProfile: !Ref BastionIamInstanceProfile
      SecurityGroupIds:
        - Ref: BastionSecurityGroup
      SubnetId:
        Fn::ImportValue: !Sub '${EnvironmentName}-PUB1-SN'
      ImageId: !FindInMap [WebAppRegion, !Ref 'AWS::Region', HVM64]
      InstanceType: t3.medium
      KeyName: !Sub ${KeyBastionSSH}

  EIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain:
        Fn::ImportValue: !Sub '${EnvironmentName}-VPCID'

  EIPAssociation1:
    Type: AWS::EC2::EIPAssociation
    DependsOn:
      - Bastion1
      - EIP1
    Properties:
      InstanceId:
        Ref: Bastion1
      AllocationId:
        Fn::GetAtt:
          - EIP1
          - AllocationId

  Bastion2:
    Type: AWS::EC2::Instance
    DependsOn:
      - BastionSecurityGroup
      - BastionIamInstanceProfile
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install unzip awscli -y
          cd /home/ubuntu
          aws s3 cp s3://${S3BucketKeyName}/${KeyBastionSSH}.pem /home/ubuntu
          chmod 400 ${KeyBastionSSH}.pem
      IamInstanceProfile: !Ref BastionIamInstanceProfile
      ImageId: !FindInMap [WebAppRegion, !Ref 'AWS::Region', HVM64]
      InstanceType: t3.medium
      KeyName: !Sub ${KeyBastionSSH}
      SecurityGroupIds:
        - Ref: BastionSecurityGroup
      SubnetId:
        Fn::ImportValue: !Sub '${EnvironmentName}-PUB2-SN'

  EIP2:
    Type: AWS::EC2::EIP
    Properties:
      Domain:
        Fn::ImportValue: !Sub '${EnvironmentName}-VPCID'

  EIPAssociation2:
    Type: AWS::EC2::EIPAssociation
    DependsOn:
      - Bastion2
      - EIP2
    Properties:
      InstanceId:
        Ref: Bastion2
      AllocationId:
        Fn::GetAtt:
          - EIP2
          - AllocationId


Outputs:
  CIDRBastion1:
    Description: The CIDR of Bastion Host 1
    Value: !Join ['', [!GetAtt Bastion1.PrivateIp, !Sub '/32']]
    Export:
      Name: !Sub ${EnvironmentName}-BASTION1-CIDR

  CIDRBastion2:
    Description: The CIDR to the Bastion Host 2
    Value: !Join ['', [!GetAtt Bastion2.PrivateIp, !Sub '/32']]
    Export:
      Name: !Sub ${EnvironmentName}-BASTION2-CIDR

  KeyBastionSSH:
    Description: SSH Key Name
    Value: !Sub ${KeyBastionSSH}
    Export:
      Name: !Sub ${EnvironmentName}-BASTION-KEYNAME
