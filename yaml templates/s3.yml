Description: >

  Kay Locke | Udagram
  AWS-CloudFormation script to create a S3 bucket for deploying a high-availability 
  web-app.

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names.
    Type: String
    Default: LockeUdagram

  S3BucketAppName:
    Description: A bucket name.
    Type: String
    Default: locke-udagram

  S3BucketKeyName:
    Description: A bucket key name.
    Type: String
    Default: locke-udagram-key

  S3BucketLogsName:
    Description: A bucket log name.
    Type: String
    Default: locke-udagram-logs

Resources:
  S3WebApp:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketAppName
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
    DeletionPolicy: Delete

  S3WebAppPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3WebApp
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action: s3:*
            Resource: !Join ['', ['arn:aws:s3:::', !Ref 'S3WebApp', '/*']]
            Principal:
              AWS: '*'

  S3KeyPar:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketKeyName
      AccessControl: Private
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain

  S3KeyParPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3KeyPar
      PolicyDocument:
        Statement:
          - Sid: AllowStaticObjectDownload
            Action: s3:GetObject
            Effect: Allow
            Resource: !Join ['', ['arn:aws:s3:::', !Ref 'S3KeyPar', '/*']]
            Principal:
              AWS: '*'
          - Sid: PutObjectAccess
            Action: s3:PutObject
            Effect: Allow
            Resource: !Join ['', ['arn:aws:s3:::', !Ref 'S3KeyPar', '/*']]
            Principal:
              AWS: '*'

  S3Logs:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Ref S3BucketLogsName
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain

  S3LogsPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Logs
      PolicyDocument:
        Statement:
          - Sid: AllowStaticObjectDownload
            Action: s3:GetObject
            Effect: Allow
            Resource: !Join ['', ['arn:aws:s3:::', !Ref 'S3Logs', '/*']]
            Principal:
              AWS: '*'
          - Sid: PutObjectAccess
            Action: s3:PutObject
            Effect: Allow
            Resource: !Join ['', ['arn:aws:s3:::', !Ref 'S3Logs', '/*']]
            Principal:
              AWS: '*'

Outputs:
  WebsiteURL:
    Description: URL for website hosted on S3
    Value: !GetAtt [S3WebApp, WebsiteURL]
    
  WebsiteSecureURL:
    Description: Secure URL for website hosted on S3
    Value: !Join ['', ['https://', !GetAtt [S3WebApp, DomainName]]]
    
  S3KeyParT:
    Description: URL for key hosted on S3
    Value: !GetAtt [S3KeyPar, WebsiteURL]
    
  S3KeyParTSecureURL:
    Description: Secure URL for key hosted on S3
    Value: !Join ['', ['https://', !GetAtt [S3KeyPar, DomainName]]]

  S3Logs:
    Description: URL for logs hosted on S3
    Value: !GetAtt [S3Logs, DomainName]
    Export:
      Name: !Sub ${EnvironmentName}-S3-LOGS

  S3LogsURL:
    Description: Secure URL for logs hosted on S3
    Value: !Join ['', ['https://', !GetAtt [S3Logs, DomainName]]]
    